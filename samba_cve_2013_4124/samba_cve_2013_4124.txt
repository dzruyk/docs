Анализ Samba CVE-2013-4124
==========================

Описание
--------


Согласно _[1]_ уязвимости подвержены *Samba* версий 3.5.X до 3.5.22, 
3.6.X до 3.6.17 и 4.x до 4.0.8.

Суть уязвимости - отсутствие проверки переполнения int, что может привести к 
DOS из-за чрезмерного потребления памяти с помощью отправки специально сформированного пакета.

Код уязвимой версии:

----
struct ea_list *read_nttrans_ea_list(TALLOC_CTX *ctx, const char *pdata, size_t data_size)
{
	struct ea_list *ea_list_head = NULL;
	size_t offset = 0;

	if (data_size < 4) {
		return NULL;
	}

	while (offset + 4 <= data_size) {
		size_t next_offset = IVAL(pdata,offset);
		//allocate new mem for entry
		struct ea_list *eal = read_ea_list_entry(ctx, pdata + offset + 4, data_size - offset - 4, NULL);

		if (!eal) {
			return NULL;
		}

		DLIST_ADD_END(ea_list_head, eal, struct ea_list *);
		if (next_offset == 0) {
			break;
		}
		offset += next_offset;
	}

	return ea_list_head;
}
----

Как видно в цикле из переданных данных извлекается элемент *struct ea_list* и смещение на начало следующего элемента.
Так как не проверяется размер смещения возможно заставить цикл выполняться вечно.

Для этого необходимо передать данные, имеющие следующую структуру:

----
item1 {
	int next_offset		= sizeof(ea_list) + sizeof(int);
	struct ea_list_entry	= entry1;
}
item2 {
	int next_offset		= UINT_MAX - sizeof(item1) + 1;
	struct  ea_list_entry	= entry2;
}
----

После обработки первого элемента смещение будет равным sizeof(item1);
Следующее после item2 смещение будет равно 

----
sizeof(item1) + UINT_MAX - sizeof(item1) + 1 = UINT_MAX + 1 = 0 (из-за переполнения int). 
----

Т.е. будет вновь обработан первый элемент.
Т.к. *read_ea_list_entry* дополнительно выделяет память на создание нового элемента
вечный цикл заставит samba скушать всю оперативную память компьютера.

Что бы узнать как эксплуатировать уязвимость надо понять в каком сообщении отправлять эти данные

Цепочка вызова уязвимой функции.

----
reply_trans2 ->
    handle_trans2 ->
        call_trans2setfilepathinfo ->
           smbd_do_setfilepathinfo ->
               smb_set_file_full_ea_info ->
                   read_nttrans_ea_list
----

После анализа исходного кода функций из этой цепочки вызовов стало ясно что для вызова уязвимой функции серверу нужно отправить запрос
SMBtrans2 а в качестве подзапроса указать *TRANS2_SETFILEINFO* с параметром *SMB_FILE_FULL_EA_INFORMATION*.
Грубо говоря это запрос на установку дополнительных атрибутов для файла. 

Стоит отметить что у пользователя производящего этот запрос должны быть права на запись к файлу атрибуты которого он собирается менять, иначе попытка эксплуатации не будет удачной (т.к. до вызова read_nttrans_ea_list samba выдаёт ошибку если нет достаточных прав. Вторым условием эксплуатации уязвимости является то, что на расшареной папке в конфигурационном файле должен быть установлен атрибут ea support.

По мотивам этого мини исследования написан модуль для link:https://github.com/rapid7/metasploit-framework/blob/master/modules/auxiliary/dos/samba/read_nttrans_ea_list.rb[Metasploit]
	
Ссылки:
-------

_[1]_ http://cve.mitre.org/cgi-bin/cvename.cgi?name=2013-4124

_[2]_ http://ru.wikipedia.org/wiki/Server_Message_Block

_[3]_ http://www.x90c.org/articles/samba_nttrans_reply_integer_overflow.txt
